<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.CommentMapper">
	<resultMap id="CommentMap"
		type="com.example.demo.entity.Comment">
		<id column="comment_id" jdbcType="INTEGER" property="commentId" />
		<result column="project_id" jdbcType="INTEGER" property="projectId" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="c_updated_at" jdbcType="DATE" property="updated" />
		
		<collection property="project"  ofType="com.example.demo.entity.Project" >
			<id column="project_id" jdbcType="INTEGER" property="projectId" />
			<result column="project_name" jdbcType="VARCHAR" property="projectName" />
			<result column="detail" jdbcType="VARCHAR" property="detail" />
			<result column="level_id" jdbcType="INTEGER" property="levelId" />
			<result column="duration_id" jdbcType="INTEGER" property="durationId" />		
			<result column="p_created_at" jdbcType="DATE" property="created" />
			<result column="p_updated_at" jdbcType="DATE" property="updated" />
		</collection>
		
	</resultMap>
	
	<!-- commentの全件取得-->
	<select id="findAll" resultMap="CommentMap">
		SELECT comment_id, project_id, remark, c_created_at FROM comments
	</select>
	
	<!-- commentを一件取得 -->
	<select id="findById" resultMap="CommentMap">
		SELECT comment_id, project_id, remark, c_created_at FROM comments
		WHERE comment_id = #{commentId}	
	</select>
	
	<!-- commentと紐付くprojectを一件取得 -->
	<select id="findByIdJoinProject" resultMap="CommentMap">
		SELECT
			comments.comment_id,
			comments.project_id,
			comments.remark,
			comments.c_created_at,
			projects.project_name,
			projects.detail,
			projects.level_id,
			projects.duration_id,
			projects.p_created_at,
			projects.p_updated_at
		FROM comments
		INNER JOIN projects ON comments.project_id = projects.project_id
	</select>
	
	<!-- commentを一件新規追加 -->
	<insert id="insertComment">
		INSERT INTO comments
		(
			project_id,
			remark,
			c_created_at
		)
		VALUES
		(
			#{projectId},
			#{remark},
			#{created}
		)
	</insert>
	
	<!-- projectと紐付くcommentを削除 -->
	<delete id="deleteByProjectId">
		DELETE FROM comments WHERE project_id = #{project.projectId}
	</delete>
	
	
	
	
</mapper>